--- OVER-VIEWING THE DATA
SELECT * FROM Order_Details
SELECT * FROM Orders
SELECT * FROM Products
SELECT * FROM Shippers
SELECT * FROM Suppliers
SELECT * FROM Categories
SELECT * FROM Employee_Details

--- TOTAL REVENUE
SELECT FORMAT(SUM(OD.QUANTITY * P.PRICE),'C','EN-US') AS TOTAL_REVENUE
FROM Order_Details AS OD JOIN Products AS P ON OD.ProductID = P.ProductID

--- TOTAL ORDERS
SELECT COUNT(ORDERID) AS TOTAL_ORDER FROM Order_Details

--- TOTAL QUANTITY
SELECT SUM(Quantity) AS TOTAL_QUANTITY FROM Order_Details

--- SHOWCASING EMPLOYEE NAME, EMPLOYEE ID, QUALIFICATION BY THEIR AGE
SELECT Name, EmployeeID, Age, Qualification FROM Employee_Details ORDER BY AGE DESC

--- SHOWCASING SHIPPERS NAME, RATE, CARRIER TYPE, SERVICE COVERAGE
SELECT ShippersName, ShippersID, [Carrier Type], [Rates ], [Service Coverage]
FROM Shippers

--- VIEWING SUPPLIERS COUNT BY COUNTRY
SELECT Country, COUNT(SUPPLIERID) AS TOTAL_SUPPLIERS FROM Suppliers GROUP BY Country

--- REVENUE BY EACH YEAR
SELECT DATEPART(YEAR,O.OrderDate) AS YEAR, 
FORMAT(SUM(OD.QUANTITY * P.PRICE),'C','EN-US') AS TOTAL_REVENUE
FROM Order_Details AS OD JOIN Orders AS O ON OD.OrderID = O.OrderID
JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY DATEPART(YEAR, O.OrderDate)
ORDER BY YEAR

--- REVENUE BY EACH QUARTER
SELECT SQ.YEAR, 
FORMAT(SUM(CASE WHEN SQ.YEAR_QUARTER = 1 THEN SQ.TOTAL_REVENUE ELSE 0 END),'C','EN-US') AS Q1_REVENUE,
FORMAT(SUM(CASE WHEN SQ.YEAR_QUARTER = 2 THEN SQ.TOTAL_REVENUE ELSE 0 END),'C','EN-US') AS Q2_REVENUE,
FORMAT(SUM(CASE WHEN SQ.YEAR_QUARTER = 3 THEN SQ.TOTAL_REVENUE ELSE 0 END),'C','EN-US') AS Q3_REVENUE,
FORMAT(SUM(CASE WHEN SQ.YEAR_QUARTER = 4 THEN SQ.TOTAL_REVENUE ELSE 0 END),'C','EN-US') AS Q4_REVENUE
FROM(SELECT DATEPART(YEAR,O.OrderDate) AS YEAR, DATEPART(QUARTER, O.ORDERDATE) AS YEAR_QUARTER,
SUM(OD.QUANTITY * P.PRICE) AS TOTAL_REVENUE
FROM Order_Details AS OD JOIN Orders AS O ON OD.OrderID = O.OrderID
JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY DATEPART(YEAR, O.OrderDate), DATEPART(QUARTER, O.OrderDate)) AS SQ
GROUP BY SQ.YEAR
ORDER BY SQ.YEAR

--- TOP 5 PRODUCTS SOLD BY QUANTITY
SELECT TOP 5 OD.ProductID, P.ProductName, SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM Order_Details AS OD JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY OD.ProductID, P.ProductName
ORDER BY TOTAL_QUANTITY DESC

--- BOTTOM 5 PRODUCTS SOLD BY QUANTITY
SELECT TOP 5 OD.ProductID, P.ProductName, SUM(OD.QUANTITY) AS TOTAL_QUANTITY
FROM Order_Details AS OD JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY OD.ProductID, P.ProductName
ORDER BY TOTAL_QUANTITY

--- 5 HIGH REVENUE GENERATED PRODUCTS
SELECT TOP 5 OD.ProductID, P.ProductName, FORMAT(SUM(OD.QUANTITY * P.PRICE),'C','EN-US')
AS TOTAL_REVENUE FROM Order_Details AS OD 
	JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY OD.ProductID, P.ProductName
ORDER BY SUM(OD.QUANTITY * P.PRICE) DESC

--- 5 LOW REVENUE GENERATED PRODUCTS
SELECT TOP 5 OD.ProductID, P.ProductName, FORMAT(SUM(OD.QUANTITY * P.PRICE),'C','EN-US')
AS TOTAL_REVENUE FROM Order_Details AS OD 
	JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY OD.ProductID, P.ProductName
ORDER BY SUM(OD.QUANTITY * P.PRICE)

--- 5 MOST ORDERED PRODUCTS
SELECT TOP 5 OD.ProductID, P.ProductName, COUNT(OD.ORDERID) AS TOTAL_ORDERS
FROM Order_Details AS OD JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY OD.ProductID, P.ProductName
ORDER BY TOTAL_ORDERS DESC

--- 5 LEAST ORDERED PRODUCTS
SELECT TOP 5 OD.ProductID, P.ProductName, COUNT(OD.ORDERID) AS TOTAL_ORDERS
FROM Order_Details AS OD JOIN Products AS P ON OD.ProductID = P.ProductID
GROUP BY OD.ProductID, P.ProductName
ORDER BY TOTAL_ORDERS 

--- SALES BY CATEGORY
SELECT P.CategoryID, C.CategoryName, COUNT(OD.ORDERID) AS TOTAL_ORDERS,
FORMAT(SUM(OD.QUANTITY * P.PRICE),'C','EN-US') AS TOTAL_REVENUE
FROM Order_Details AS OD JOIN Products AS P ON OD.ProductID = P.ProductID
JOIN Categories AS C ON P.CategoryID = C.CategoryID
GROUP BY P.CategoryID, C.CategoryName
ORDER BY TOTAL_ORDERS DESC

--- MOST USED PAYMENT METHOD
SELECT O.[Payment Mode], COUNT(O.[Payment Mode]) AS NO_OF_PAYMENTS
FROM Order_Details AS OD JOIN Orders AS O ON OD.OrderID = O.OrderID
GROUP BY O.[Payment Mode]
ORDER BY NO_OF_PAYMENTS DESC